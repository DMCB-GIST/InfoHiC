#!/bin/bash
echo "InfoHiC_lib = ${InfoHiC_lib}"
if [[ ! -s ${InfoHiC_lib}/post_analysis ]];then
        echo "set the InfoHiC_lib path correctly"
        exit 1
fi


target="sample1"
window_size=2Mb
true_matrix=""
while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    -m|--true_matrix)
      true_matrix=`readlink -f "$2"`
      shift
      shift
      ;;
    -r|--resolution)
      res="$2"
      shift
      shift
      ;;
    -w|--window)
      window_size="$2"
      shift
      shift
      ;;
    -h|--help)
      echo -e "Usage: InfoHiC_post <InfoHiC_output> [options]\n"
      echo -e "Options:"
      echo -e  "\t-w, --window (required) \n \t\t window size (1Mb, 2Mb)
\t-r, --resolution (required) \n \t\t resolution (10kb, 40kb)
\t-m, --true_matrix (optional) \n \t\t comparison with the true matrix. Enter a true matrix directory 
\t-h, --help\n
"

      exit 1
      ;;
    *)
     POSITIONAL+=("$1") # save it in an array for later
     shift
     ;;
  esac
done

set -- "${POSITIONAL[@]}" # restore positional parameters

export RES=$res

InfoHiC_output=`readlink -f "$1"`
echo -e "InfoHiC_output = $InfoHiC_output"
if [[ $1 == "" ]] || [[ ! -s $InfoHiC_output ]];then
        echo "the InfoHiC_output doesn't exist"
        exit 1
fi


if [[ $true_matrix != "" ]] && [[ -s $true_matrix ]];then
        cis_path=$true_matrix\/chr_matrix
        trans_path=$true_matrix\/chr_matrix_trans
else
	cis_path=""
	trans_path=""
fi
echo "true_matrix = $true_matrix"

if [[ $window_size == "1Mb" ]] && [[ $res == "10000" ]];then
	f_awk=${InfoHiC_lib}/post_analysis/test_f_1Mb_10kb.awk
	rc_awk=${InfoHiC_lib}/post_analysis/test_rc_1Mb_10kb.awk
else
	f_awk=${InfoHiC_lib}/post_analysis/test_f_${window_size}.awk
	rc_awk=${InfoHiC_lib}/post_analysis/test_rc_${window_size}.awk
fi




window=contigs.bed.sv_window
cd $InfoHiC_output\/karyotypes
while read -r -a l;do
	cd ${l[0]}
	if [ -s contigs.bed.sv_window ];then
		Rscript ${InfoHiC_lib}/post_analysis/index_ref_coor.R
	fi
	if [ -s "ref.sv_window" ] && [[ $true_matrix != "" ]];then
		s=`echo ${l[0]} | awk '{n=split($1,f,"."); for(i=2;i<=n;i++){printf "%s\t", f[i];}; printf "\n";}'`
		${InfoHiC_lib}/post_analysis/true_format.sh "$s" $cis_path $trans_path  
		${InfoHiC_lib}/post_analysis/test_format.sh $window.class $target $window_size
		Rscript ${InfoHiC_lib}/post_analysis/format.R $target > 0.output 
		Rscript  ${InfoHiC_lib}/post_analysis/format_merge.R 
		mkdir -p ref_window 
		mkdir -p sv_window 
		Rscript ${InfoHiC_lib}/post_analysis/plot_format.R "true" 40
                Rscript ${InfoHiC_lib}/post_analysis/plot_format.R "test" 40
		Rscript ${InfoHiC_lib}/post_analysis/plot_format.R "all" 40
	fi
	i=1
	id=$target
	while read -r -a line;do
		s=${line[1]}
		e=$((${line[2]}-1))
		contig_f=contig_out/class_predictions_$id\_$i\_${line[0]}_$s\_$e.txt 
		contig_rc=contig_out_rc/class_predictions_$id\_$i\_${line[0]}_$s\_$e.txt
		if [[ ! -s $contig_f ]] || [[ ! -s $contig_rc ]];then
			i=$(($i+1))
			continue;
		fi;
		cat $contig_f |  awk -f $f_awk | awk '{print "'${line[0]}'""\t"$1"\t""'${line[0]}'""\t"$2"\t"$3}' > $i.output
		cat $contig_rc |  awk -f $rc_awk | awk '{print "'${line[0]}'""\t"$1"\t""'${line[0]}'""\t"$2"\t"$3}' >> $i.output
		Rscript ${InfoHiC_lib}/post_analysis/format_merge_contig.R $i.output $i.output.format
		cat $i.output.format  |  awk '{if($2>0 && $4>0) print $0}' > $i.output.format.v
		Rscript ${InfoHiC_lib}/post_analysis/tad.R $i.output.format.v 50
		cat contigs.index.sv | awk '{if($1=="'${line[0]}'" && $2 >= '"$s"' && $2<= '"$e"' ) print $0}' > $i.index.sv
		cat contigs.index.ens | awk '{ if($3=="'${line[0]}'" && $5 >= '"$s"' && $6<= '"$e"' ) print $0}' > $i.index.ens
		cat contigs.index.se| awk '{ if($3=="'${line[0]}'" && $5 >= '"$s"' && $6<= '"$e"' ) print $0}' > $i.index.se
		cat contigs.index.te| awk '{ if($3=="'${line[0]}'" && $5 >= '"$s"' && $6<= '"$e"' ) print $0}' > $i.index.te
		Rscript ${InfoHiC_lib}/post_analysis/plot_withtad_withloop.R $i.output.format.v 40 $i.output.format.v.tad $i.index.sv $i.index.ens $i.index.se  $i.index.te all null $i.index.ref_coor

		${InfoHiC_lib}/post_analysis/ICE.sh $i $window_size $res
		if [[ ! -s  $i.output_ice.m ]];then
                        i=$(($i+1))
			continue;
		fi
		python ${InfoHiC_lib}/post_analysis/neoloop_ICE.py $i $res > $i.index.neoloop.m
		if [[ -s $i.index.sv ]] && [[ -s $i.index.neoloop.m ]];then
			Rscript ${InfoHiC_lib}/post_analysis/neoloop_ICE_nearsv.R $i
		fi
		if [[ -s $i.index.neoloop.m ]];then
			Rscript ${InfoHiC_lib}/post_analysis/neoloop_ICE.R $i > $i.index.neoloop.ens.m
		fi
		Rscript ${InfoHiC_lib}/post_analysis/plot_withtad_withloop.R $i.output.m.format.v 40 $i.output.m.format.v.tad $i.index.sv $i.index.ens $i.index.se  $i.index.te all $i.index.neoloop.m $i.index.ref_coor
		i=$(($i+1))
	done < contigs.bed.sv_window


	cd ../
done< euler.list
